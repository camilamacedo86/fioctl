name: Test Build

on:
  push:
  pull_request:

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '~1.19'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: build --snapshot --clean

      - name: Rename Directories
        run: |
          for dir in dist/*_v1; do
            mv "$dir" "${dir/_v1/}"
          done

      - name: Archive Binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: dist/

  test-binaries:
    needs: build-binaries
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            binary: fioctl_linux_amd64/fioctl-linux-amd64
          - os: windows-latest
            binary: fioctl_windows_amd64/fioctl-windows-amd64.exe
          - os: macos-latest
            binary: fioctl_darwin_amd64/fioctl-darwin-amd64
          - os: ubuntu-latest
            binary: fioctl_linux_arm64/fioctl-linux-arm64
            qemu: true
          - os: macos-latest
            binary: fioctl_darwin_arm64/fioctl-darwin-arm64
            qemu: true

    runs-on: ${{ matrix.os }}
    steps:
      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: bin/

      - name: Set Execute Permission
        run: chmod +x ./bin/${{ matrix.binary }}
        if: runner.os != 'Windows'

      - name: Set up QEMU
        if: matrix.qemu == true
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Test Binary
        if: runner.os == 'Windows'
        run: .\bin\fioctl_windows_amd64\fioctl-windows-amd64.exe logout
        shell: pwsh

      - name: Test Binary
        if: runner.os != 'Windows'
        run: ./bin/${{ matrix.binary }} logout